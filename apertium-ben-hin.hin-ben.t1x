<?xml version="1.0" encoding="UTF-8"?>
<transfer default="chunk">
<section-def-cats>
   <def-cat n="noun">
      <cat-item tags="n.*"/>
      <cat-item tags="np.*"/>
    </def-cat>

    <def-cat n="noun_nom">
      <cat-item tags="n.*.nom"/>
      <cat-item tags="n.*.nom.*"/>
      <cat-item tags="np.*.nom"/>
    </def-cat>

    <def-cat n="adj">
      <cat-item tags="adj"/>
      <cat-item tags="adj.*"/>
    </def-cat>

    <def-cat n="prn">
      <cat-item tags="prn.*"/>
    </def-cat>

    <def-cat n="verb">
      <cat-item tags="vbser.*"/>
      <cat-item tags="vbaux.*"/>
      <cat-item tags="vblex.*"/>
    </def-cat>
    <def-cat n="verb_inf">
      <cat-item tags="vblex.inf.*"/>
      <cat-item tags="vblex.*.inf.*"/>	<!-- just while the tv/iv bug in the bidix is not solved -->
    </def-cat>
    <def-cat n="verb_pers">
      <cat-item tags="vbser.*.p1.*"/>
      <cat-item tags="vbser.*.p2.*"/>
      <cat-item tags="vbser.*.p3.*"/>
      <cat-item tags="vbaux.*.p1.*"/>
      <cat-item tags="vbaux.*.p2.*"/>
      <cat-item tags="vbaux.*.p3.*"/>
      <cat-item tags="vblex.*.p1.*"/>
      <cat-item tags="vblex.*.p2.*"/>
      <cat-item tags="vblex.*.p3.*"/>
    </def-cat>
    <def-cat n="vblex_pers">
      <cat-item tags="vblex.*.p1.*"/>
      <cat-item tags="vblex.*.p2.*"/>
      <cat-item tags="vblex.*.p3.*"/>
    </def-cat>
    <def-cat n="vblex_impf">
      <cat-item tags="vblex.*.impf.*"/>
    </def-cat>
    <def-cat n="vbser_pres_pers">
      <cat-item tags="vbser.pres.p1.*"/>
      <cat-item tags="vbser.pres.p2.*"/>
      <cat-item tags="vbser.pres.p3.*"/>
    </def-cat>

    <def-cat n="ppst">
      <cat-item tags="vbser.ppst"/>
    </def-cat>
    <def-cat n="pcnd">
      <cat-item tags="vblex.pcnd"/>
    </def-cat>
    <def-cat n="past">
      <cat-item tags="vblex.past"/>
    </def-cat>
    <def-cat n="present">
      <cat-item tags="vblex.pres"/>
      <cat-item tags="vblex.pres.*"/>
      <cat-item tags="vblex.prft.*"/>
    </def-cat>

    <def-cat n="post">
      <cat-item tags="post"/>
    </def-cat>

    <def-cat n="sent">
      <cat-item tags="sent"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>

    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.pos"/>
      <attr-item tags="adj.ord"/>
    </def-attr>

    <def-attr n="sint">
      <attr-item tags="sint"/>
      <attr-item tags="psint"/>
    </def-attr>

    <def-attr n="a_det">
      <attr-item tags="det"/>
      <attr-item tags="det.dem"/>
      <attr-item tags="det.pos"/>
      <attr-item tags="det.pos.pol"/>
      <attr-item tags="det.ord"/>
    </def-attr>

    <def-attr n="transivity">
      <attr-item tags="tv"/>
      <attr-item tags="iv"/>
    </def-attr>
    <def-attr n="nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
    </def-attr>

    <def-attr n="a_cntverb">
      <attr-item tags="cnt"/>
    </def-attr>

    <def-attr n="a_post">
      <attr-item tags="post"/>
    </def-attr>

    <def-attr n="gen">
      <attr-item tags="m"/>
      <attr-item tags="f"/>
      <attr-item tags="mf"/>
      <attr-item tags="nt"/>
    </def-attr>

    <def-attr n="anim">
      <attr-item tags="nn"/>
      <attr-item tags="aa"/>
      <attr-item tags="an"/>
      <attr-item tags="hu"/>
      <attr-item tags="el"/>
    </def-attr>
    
    <def-attr n="a_neg">
      <attr-item tags="neg"/>
    </def-attr>

    <def-attr n="a_n">
      <attr-item tags="n"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.al"/>
    </def-attr>

    <def-attr n="a_prn">
      <attr-item tags="prn"/>
      <attr-item tags="prn.pers"/>
      <attr-item tags="prn.ref"/>
      <attr-item tags="prn.dem"/>
      <attr-item tags="prn.dem.prox"/>
      <attr-item tags="prn.dem.dist"/>
      <attr-item tags="prn.ind"/>
      <attr-item tags="prn.rel"/>
      <attr-item tags="prn.rel.infml"/>
      <attr-item tags="prn.rel.pol"/>
      <attr-item tags="prn.itg"/>
      <attr-item tags="prn.p3.itg"/>
    </def-attr>

    <def-attr n="case">
      <attr-item tags="nom"/>
      <attr-item tags="dat"/>
      <attr-item tags="loc"/>
      <attr-item tags="gen"/>
      <attr-item tags="obj"/>
      <attr-item tags="obl"/>
      <attr-item tags="erg"/>
      <attr-item tags="ins"/>
    </def-attr>

    <def-attr n="a_verb">
       <attr-item tags="vblex"/>
       <attr-item tags="vaux"/>
       <attr-item tags="vbser"/>
    </def-attr>

    <def-attr n="tense">
       <attr-item tags="inf"/>
       <attr-item tags="pres"/>
       <attr-item tags="prs"/>
       <attr-item tags="fut"/>
       <attr-item tags="imp"/>
       <attr-item tags="impf"/>
       <attr-item tags="pres.smpl"/>
       <attr-item tags="pres.imp"/>
       <attr-item tags="pres.cnt"/>
       <attr-item tags="past.smpl"/>
       <attr-item tags="past.cnt"/>
       <attr-item tags="past.hbtl"/>
       <attr-item tags="ft.smpl"/>
       <attr-item tags="ft.imp"/>
       <attr-item tags="plprft"/>
    </def-attr>

    <def-attr n="pers">
       <attr-item tags="p1"/>
       <attr-item tags="p2"/>
       <attr-item tags="p2.frm"/>
       <attr-item tags="p2.fam"/>
       <attr-item tags="p2.infml"/>
       <attr-item tags="p2.pol"/>
       <attr-item tags="p3"/>
       <attr-item tags="p3.infml"/>
       <attr-item tags="p3.pol"/>
    </def-attr>
  </section-def-attrs>

  <section-def-vars>
    <def-var n="tvvar"/>
    <def-var n="nbrvar"/>
    <def-var n="persvar"/>
    <def-var n="casevar"/>
    <def-var n="tensevar"/>
    <def-var n="genvar"/>
  </section-def-vars>

  <section-def-macros>

 <!--Macro to set the value of nbrvar-->
    <def-macro n="set_nbrvar" npar="1">
     <choose>
        <when>
          <test>
            <or>
                  <equal>
                    <clip part="nbr" pos="1" side="tl"/>
                    <lit-tag v="sg"/>
                  </equal>
                  <equal>
                    <clip part="nbr" pos="1" side="tl"/>
                    <lit-tag v="pl"/>
                  </equal>
                  <equal>
                    <clip part="nbr" pos="1" side="tl"/>
                    <lit-tag v="sp"/>
                  </equal>
            </or>
          </test>
              <let>
                  <var n="nbrvar"/>
                  <clip part="nbr" pos="1" side="tl"/>
              </let>
        </when>
      <otherwise>
              <let>
                <var n="nbrvar"/>
                <lit-tag v="sg"/>
              </let>
      </otherwise>
      </choose>
    </def-macro>

 <!--Macro to set the value of genvar-->
    <def-macro n="set_genvar" npar="1">
     <choose>
        <when>
          <test>
            <or>
            <equal>
              <clip part="gen" pos="1" side="tl"/>
              <lit-tag v="m"/>
            </equal>
            <equal>
              <clip part="gen" pos="1" side="tl"/>
              <lit-tag v="f"/>
            </equal>
            <equal>
              <clip part="gen" pos="1" side="tl"/>
              <lit-tag v="mf"/>
            </equal> 
            <equal>
              <clip part="gen" pos="1" side="tl"/>
              <lit-tag v="nt"/>
            </equal>
            </or>
          </test>
        <let>
              <var n="genvar"/>
              <clip part="gen" pos="1" side="tl"/>
        </let>
        </when>
        <otherwise>
          <let>
              <var n="genvar"/>
              <lit-tag v="m"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>

 <!--Macro to set the value of persvar-->
<!--
    <def-macro n="set_persvar" npar="1">
     <choose>
        <when>
          <test>
            <or>
            <equal>
              <clip part="pers" pos="1" side="tl"/>
              <lit-tag v="p1"/>
            </equal>
            <equal>
              <clip part="pers" pos="1" side="tl"/>
              <lit-tag v="p2"/>
            </equal>
            <equal>
              <clip part="pers" pos="1" side="tl"/>
              <lit-tag v="p3"/>
            </equal>
            </or>
          </test>
        <let>
              <var n="persvar"/>
              <clip part="pers" pos="1" side="tl"/>
        </let>
        </when>
        <otherwise>
          <let>
              <var n="persvar"/>
              <lit-tag v="p3"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
-->

 <!--Macro to set the value of casevar for nouns-->
    <def-macro n="set_casevar_noun" npar="1">
     <choose>
        <when>
          <test>
            <or>
            <equal>
              <clip part="case" pos="1" side="tl"/>
              <lit-tag v="nom"/>
            </equal>
            <equal>
              <clip part="case" pos="1" side="tl"/>
              <lit-tag v="obj"/>
            </equal>
            <equal>
              <clip part="case" pos="1" side="tl"/>
              <lit-tag v="loc"/>
            </equal>
            </or>
          </test>
        <let>
              <var n="casevar"/>
              <clip part="case" pos="1" side="tl"/>
        </let>
        </when>
        <otherwise>
          <let>
              <var n="casevar"/>
              <lit-tag v="nom"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>


 <!--Macro to set the value of casevar for pronouns-->
    <def-macro n="set_casevar_pronoun" npar="1">
     <choose>
        <when>
          <test>
            <or>
            <equal>
              <clip part="case" pos="1" side="tl"/>
              <lit-tag v="nom"/>
            </equal>
            <equal>
              <clip part="case" pos="1" side="tl"/>
              <lit-tag v="obj"/>
            </equal>
            <equal>
              <clip part="case" pos="1" side="tl"/>
              <lit-tag v="loc"/>
            </equal>
            <equal>
              <clip part="case" pos="1" side="tl"/>
              <lit-tag v="gen"/>
            </equal>
            </or>
          </test>
        <let>
              <var n="casevar"/>
              <clip part="case" pos="1" side="tl"/>
        </let>
        </when>
        <otherwise>
          <let>
              <var n="casevar"/>
              <lit-tag v="nom"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>


    <def-macro n="noun_init" npar="1">
    
        <call-macro n="set_nbrvar">
          <with-param pos="1"/>
        </call-macro>

        <call-macro n="set_genvar">  
          <with-param pos="1"/>
        </call-macro>
    
        <call-macro n="set_casevar_noun">  
          <with-param pos="1"/>
        </call-macro>
      
    </def-macro>


    <def-macro n="pronoun_init" npar="1">
    
        <call-macro n="set_nbrvar">
          <with-param pos="1"/>
        </call-macro>

        <call-macro n="set_genvar">  
          <with-param pos="1"/>
        </call-macro>
    
        <call-macro n="set_casevar_pronoun">  
          <with-param pos="1"/>
        </call-macro>
      
    </def-macro>


<!--
    <def-macro n="verb_init" npar="1">

      <choose>
        <when>
          <test>
            <or>
                  <equal>
                    <clip part="nbr" pos="1" side="tl"/>
                    <lit-tag v="sg"/>
                  </equal>
                  <equal>
                    <clip part="nbr" pos="1" side="tl"/>
                    <lit-tag v="pl"/>
                  </equal>
                  <equal>
                    <clip part="nbr" pos="1" side="tl"/>
                    <lit-tag v="sp"/>
                  </equal>
            </or>
        </test>
            <let>
                  <var n="nbrvar"/>
                        <clip part="nbr" pos="1" side="tl"/>
            </let>
        </when>
  <otherwise>
          <let>
        <var n="nbrvar"/>
              <lit-tag v="sg"/>
          </let>
  </otherwise>
      </choose>
      <choose>
        <when>
          <test>
            <or>
            <equal>
              <clip part="gen" pos="1" side="tl"/>
              <lit-tag v="m"/>
            </equal>
            <equal>
              <clip part="gen" pos="1" side="tl"/>
              <lit-tag v="f"/>
            </equal>
            <equal>
              <clip part="gen" pos="1" side="tl"/>
              <lit-tag v="mf"/>
            </equal>
            <equal>
              <clip part="gen" pos="1" side="tl"/>
              <lit-tag v="nt"/>
            </equal>
            </or>
          </test>
        <let>
              <var n="genvar"/>
              <clip part="gen" pos="1" side="tl"/>
        </let>
        </when>
        <otherwise>
          <let>
              <var n="genvar"/>
              <lit-tag v="m"/>
          </let>
        </otherwise>
      </choose>
      <choose>
        <when>
          <test>
            <or>
            <equal>
              <clip part="pers" pos="1" side="tl"/>
              <lit-tag v="p1"/>
            </equal>
            <equal>
              <clip part="pers" pos="1" side="tl"/>
              <lit-tag v="p2"/>
            </equal>
            <equal>
              <clip part="pers" pos="1" side="tl"/>
              <lit-tag v="p3"/>
            </equal>
            <equal>
              <clip part="pers" pos="1" side="tl"/>
              <lit-tag v="PD"/>
            </equal>
            </or>
          </test>
        <let>
              <var n="persvar"/>
              <clip part="pers" pos="1" side="tl"/>
        </let>
        <let>
              <var n="tvvar"/>
              <lit-tag v="tv"/>
        </let>
        </when>
        <otherwise>
          <let>
              <var n="persvar"/>
              <lit-tag v="p3"/>
          </let>
          <let>
              <var n="tvvar"/>
              <lit-tag v="iv"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
-->


    <def-macro n="change_tense" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip part="tense" pos="1" side="sl"/><lit-tag v="pres"/></equal>
          </test>
          <let><var n="tensevar"/><lit-tag v="pres.smpl"/></let>
        </when>
        <when>
          <test>
            <equal><clip part="tense" pos="1" side="sl"/><lit-tag v="prs"/></equal>
          </test>
          <let><var n="tensevar"/><lit-tag v="pres.smpl"/></let>
        </when>
        <when>
          <test>
            <equal><clip part="tense" pos="1" side="sl"/><lit-tag v="fut"/></equal>
          </test>
          <let><var n="tensevar"/><lit-tag v="ft.smpl"/></let>
        </when>
        <when>
          <test>
            <equal><clip part="tense" pos="1" side="sl"/><lit-tag v="imp"/></equal>
          </test>
          <let><var n="tensevar"/><lit-tag v="past.smpl"/></let>
        </when>
        <when>
          <test>
            <equal><clip part="tense" pos="1" side="sl"/><lit-tag v="impf"/></equal>
          </test>
          <let><var n="tensevar"/><lit-tag v="past.smpl"/></let>
        </when>
        <otherwise>
          <let><var n="tensevar"/><clip part="tense" pos="1" side="sl"/></let>
        </otherwise>
      </choose>
    </def-macro>

    <def-macro n="change_pers" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip part="pers" pos="1" side="sl"/><lit-tag v="p2.frm"/></equal>
          </test>
          <let><var n="persvar"/><lit-tag v="p2.pol"/></let>
        </when>
        <when>
          <test>
            <equal><clip part="pers" pos="1" side="sl"/><lit-tag v="p2"/></equal>
          </test>
          <let><var n="persvar"/><lit-tag v="p2.pol"/></let>
        </when>
        <when>
          <test>
            <equal><clip part="pers" pos="1" side="sl"/><lit-tag v="p3"/></equal>
          </test>
          <let><var n="persvar"/><lit-tag v="p3.pol"/></let>
        </when>
        <otherwise>
          <let><var n="persvar"/><clip part="pers" pos="1" side="sl"/></let>
        </otherwise>
      </choose>
    </def-macro>
  </section-def-macros>

  <section-rules>

     <rule comment="RULE: ADJ">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <out>
          <chunk name="adj">
            <tags>
              <tag><lit-tag v="AP"/></tag>
             </tags>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_adj"/>
            <clip pos="1" side="tl" part="sint"/>
            <lit-tag v="mf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
          </chunk>
        </out>
      </action>
    </rule>

   <rule comment="RULE: NOUN">
      <pattern>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="noun_init">
          <with-param pos="1" />
        </call-macro>
        <out>
          <chunk name="noun">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="genvar"/></tag>
              <tag><var n="nbrvar"/></tag>
              <tag><var n="casevar"/></tag>
             </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_n"/>
              <clip pos="1" side="tl" part="gen" link-to="2"/>
              <clip pos="1" side="tl" part="anim"/>
              <clip pos="1" side="tl" part="nbr" link-to="3"/>
              <clip pos="1" side="tl" part="case" link-to="4"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

   <rule comment="RULE: PRONOUN">
      <pattern>
        <pattern-item n="prn"/>
      </pattern>
      <action>
        <call-macro n="pronoun_init">
          <with-param pos="1" />
        </call-macro>
        <out>
          <chunk name="prn">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="genvar"/></tag>
              <tag><var n="nbrvar"/></tag>
              <tag><var n="casevar"/></tag>
             </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <clip pos="1" side="tl" part="pers"/>
              <clip pos="1" side="tl" part="anim"/>
              <clip pos="1" side="tl" part="gen" link-to="2"/>
              <clip pos="1" side="tl" part="nbr" link-to="3"/>
              <clip pos="1" side="tl" part="case" link-to="4"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

   <rule comment="RULE: VERB (conjugated)">
      <pattern>
        <pattern-item n="verb_pers"/>
      </pattern>
      <action>
        <call-macro n="change_tense">
          <with-param pos="1" />
        </call-macro>
        <call-macro n="change_pers">
          <with-param pos="1" />
        </call-macro>
        <out>
          <chunk name="vblex">
            <tags>
              <tag><lit-tag v="VP"/></tag>
              <tag><var n="tensevar"/></tag>
              <tag><var n="persvar"/></tag>
             </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <var n="tensevar"/>
              <var n="persvar"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

   <rule comment="RULE: VERB (infinitive)">
      <pattern>
        <pattern-item n="verb_inf"/>
      </pattern>
      <action>
        <out>
          <chunk name="vblex">
            <tags>
              <tag><lit-tag v="VP"/></tag>
              <tag><clip pos="1" side="tl" part="tense"/></tag>
             </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="tense"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

   <rule comment="RULE: vblex.impf + vbser.pres.pers > vblex.pres">
      <pattern>
        <pattern-item n="vblex_impf"/>
        <pattern-item n="vbser_pres_pers"/>
      </pattern>
      <action>
        <call-macro n="change_tense">
          <with-param pos="2" />
        </call-macro>
        <call-macro n="change_pers">
          <with-param pos="2" />
        </call-macro>
        <out>
          <chunk name="vblex">
            <tags>
              <tag><lit-tag v="VP"/></tag>
              <tag><var n="tensevar"/></tag>
              <tag><var n="persvar"/></tag>
             </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <var n="tensevar"/>
              <var n="persvar"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="RULE: adj + vbser.pres.pers → adj (Eg: सुभाष लम्बा है → সুভাষ লম্বা)">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="vbser_pres_pers"/>
      </pattern>
      <action>
        <out>
          <chunk name="adj_vbser">
            <tags>
              <tag><lit-tag v="AP"/></tag>
             </tags>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_adj"/>
            <lit-tag v="mf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="RULE: noun.nom + post → noun.gen + post (Eg: रहीम से → রাহিমের থেকে)">
      <pattern>
        <pattern-item n="noun_nom"/>
        <pattern-item n="post"/>
      </pattern>
      <action>
        <call-macro n="noun_init">
          <with-param pos="1" />
        </call-macro>
      
           <let>
              <var n ="casevar"/>
              <lit-tag v="gen"/>
            </let>
        <out>
          <chunk name="noun">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="genvar"/></tag>
              <tag><var n="nbrvar"/></tag>
              <tag><var n="casevar"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_n"/>
              <clip pos="1" side="tl" part="gen" link-to="2"/>
              <clip pos="1" side="tl" part="anim"/>
              <clip pos="1" side="tl" part="nbr" link-to="3"/>
              <clip pos="1" side="tl" part="case" link-to="4"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
          <b pos="1"/>
          <chunk name="post">
            <tags>
              <tag><lit-tag v="post"/></tag>
            </tags>
            <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <clip pos="2" side="tl" part="a_post"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
          </chunk>
        </out>
      </action>
    </rule>
  
    <rule comment="RULE: SENT">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
  </section-rules>
</transfer>

<!--
Resources:
    http://wiki.apertium.org/wiki/Chunking:_A_full_example
    http://wiki.apertium.org/wiki/Chunking
    http://wiki.apertium.org/wiki/Apertium_New_Language_Pair_HOWTO#Transfer_rules
    http://wiki.apertium.org/wiki/A_long_introduction_to_transfer_rules
    http://wiki.apertium.org/wiki/Transfer#Adding_structural_transfer_.28grammar.29_rules
-->

